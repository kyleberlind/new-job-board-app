[{"/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/reportWebVitals.js":"1","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/index.js":"2","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/App.js":"3","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/services/HelloWorldServices.js":"4","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/applicant/signup/ApplicantSignup.js":"5","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/home/Home.js":"6","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/applicant/login/ApplicantLogin.js":"7","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/employer/signup/EmployerSignup.js":"8","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/employer/login/EmployerLogin.js":"9","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/employer/Employer.js":"10","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/applicant/Applicant.js":"11","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/libs/hooks/useFormFields.js":"12"},{"size":362,"mtime":1608507302250,"results":"13","hashOfConfig":"14"},{"size":548,"mtime":1608967054077,"results":"15","hashOfConfig":"14"},{"size":1716,"mtime":1608967096219,"results":"16","hashOfConfig":"14"},{"size":97,"mtime":1608590152092,"results":"17","hashOfConfig":"14"},{"size":4465,"mtime":1608966583414,"results":"18","hashOfConfig":"14"},{"size":1406,"mtime":1608966583420,"results":"19","hashOfConfig":"14"},{"size":1806,"mtime":1608966583413,"results":"20","hashOfConfig":"14"},{"size":3348,"mtime":1608966583419,"results":"21","hashOfConfig":"14"},{"size":1802,"mtime":1608966583417,"results":"22","hashOfConfig":"14"},{"size":587,"mtime":1608966583417,"results":"23","hashOfConfig":"14"},{"size":598,"mtime":1608966583412,"results":"24","hashOfConfig":"14"},{"size":287,"mtime":1608966583423,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"vit8xu",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/reportWebVitals.js",[],["61","62"],"/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/index.js",[],"/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/App.js",["63","64","65"],"// Components\nimport Applicant from \"./components/applicant/Applicant.js\";\nimport Employer from \"./components/employer/Employer.js\";\nimport Home from \"./components/home/Home.js\";\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\n\n\n// css\nimport \"./App.css\";\n\n// React\nimport React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// Backend\nimport { getHelloWorldMessageService } from \"./services/HelloWorldServices\";\n\n// TODO: should probably move all routing to a separate file\n\n\nfunction App() {\n  const handleButtonClick = () => {\n    getHelloWorldMessageService()\n      .then((response) => {\n        response.json().then((data) => {\n          console.log(data);\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Router>\n      <div>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"/\">New Job Board Application</Navbar.Brand>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/\">Home</Nav.Link>\n              <Nav.Link href=\"/about\">About</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/employer\" component={Employer} />\n        <Route path=\"/applicant\" component={Applicant} />\n        <Route path=\"/about\" component={About} />\n        <button onClick={handleButtonClick}>click to connect to backend </button>\n      </div>\n    </Router>\n  );\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nexport default App;\n","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/services/HelloWorldServices.js",["66"],"import React from \"react\";\n\nexport const getHelloWorldMessageService = () => {\n  return fetch(\n    \"/get_hello_world\"\n  );\n}\n","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/applicant/signup/ApplicantSignup.js",["67","68","69"],"import Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport { useFormFields } from \"../../../libs/hooks/useFormFields.js\";\n\nimport axios from 'axios';\n\nimport React, { useState } from 'react';\n\nimport './css/ApplicantSignup.css';\n\nfunction ApplicantSignup() {\n  const [fields, handleFieldChange] = useFormFields({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    confirmEmail: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [resumeFile, setResumeFile] = useState();\n  const [fieldValidationMessage, setFieldValidationMessage] = useState(\"\");\n  const [areFieldsValid, setAreFieldsValid] = useState(false);\n\n  const onResumeUpload = e => {\n    setResumeFile(e.target.files[0]);\n  };\n\n  const onSubmit = () => {\n    // validate fields\n    if (fields.firstName.length === 0) {\n      setFieldValidationMessage(\"Please enter a first name\");\n    } else if (fields.lastName.length === 0) {\n      setFieldValidationMessage(\"Please enter a last name\");\n    } else if (fields.email.length === 0) {\n      setFieldValidationMessage(\"Please enter a email\");\n    } else if (fields.confirmEmail.length === 0) {\n      setFieldValidationMessage(\"Please confirm your email\");\n    } else if (fields.email !== fields.confirmEmail) {\n      setFieldValidationMessage(\"Please ensure your emails match\");\n    } else if (fields.password.length < 6) {\n      setFieldValidationMessage(\"Please enter a password of 6 characters or longer\");\n    } else if (fields.password !== fields.confirmPassword) {\n      setFieldValidationMessage(\"Please ensure your passwords match\");\n    } else if (resumeFile === null) {\n      setFieldValidationMessage(\"Please upload a resume\");\n    } else {\n        // TODO: Hook up with backend and actually sign up this user\n      setFieldValidationMessage(\"\");\n      setAreFieldsValid(true);\n    }\n  }\n\n  return (\n    <div className=\"root\">\n      <h1>\n        Applicant Signup\n      </h1>\n      <Form className=\"form\">\n        <Form.Group controlId=\"firstName\">\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            autoFocus\n            placeholder=\"Enter first name\"\n            value={fields.firstName}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"lastName\">\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            placeholder=\"Enter last name\"\n            value={fields.lastName}\n            onChange={handleFieldChange}\n          />\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n        <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n          </Form.Group>\n        <Form.Group controlId=\"confirmEmail\">\n          <Form.Label>Confirm email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Confirm email\"\n            value={fields.confirmEmail}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"confrimPassword\">\n          <Form.Label>Confirm password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={fields.confrimPassword}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Label>Resume</Form.Label>\n        <input type=\"file\" onChange={onResumeUpload}/>\n        <Button className=\"button\" onClick={onSubmit} variant=\"primary\">\n          Sign Up\n        </Button>\n        {\n          fieldValidationMessage.length !== 0\n            &&\n            <div class=\"alert alert-danger\" role=\"alert\">\n              {fieldValidationMessage}\n            </div>\n        }\n        {\n          areFieldsValid\n            &&\n            <div class=\"alert alert-success\" role=\"alert\">\n              Success!\n            </div>\n        }\n      </Form>\n    </div>\n  );\n}\n\nexport default ApplicantSignup;\n","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/home/Home.js",["70"],"import Button from 'react-bootstrap/Button';\n\nimport React, { useState } from 'react';\n\nimport './css/Home.css';\n\nfunction Home() {\n    return (\n        <div className=\"root\">\n            <h1>\n                New Job Board Application\n            </h1>\n            <div className=\"buttonContainer\">\n                <Button\n                    className=\"button\"\n                    href={\"/employer/login\"}\n                    variant=\"primary\"\n                    block\n                >\n                    Login as Employer\n                </Button>\n                <Button\n                    className=\"button\"\n                    href={\"/applicant/login\"}\n                    variant=\"primary\"\n                    block\n                >\n                    Login as Applicant\n                </Button>\n                <Button\n                    className=\"button\"\n                    href={\"/employer/signup\"}\n                    variant=\"outline-primary\"\n                    block\n                >\n                    Sign up as Employer\n                </Button>\n                <Button\n                    className=\"button\"\n                    href={\"/applicant/signup\"}\n                    variant=\"outline-primary\"\n                    block\n                >\n                    Sign up as Applicant\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/applicant/login/ApplicantLogin.js",["71","72"],"import Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport React, { useState } from 'react';\n\nimport './css/ApplicantLogin.css';\n\nfunction ApplicantLogin() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const onEmailChange = (input) => {\n      isSubmitted && setIsSubmitted(false);\n      setEmail(input.target.value);\n  };\n\n  const onPasswordChange = (input) => {\n      isSubmitted && setIsSubmitted(false);\n      setPassword(input.target.value);\n  };\n\n  return (\n    <div className=\"root\">\n      <h1>\n        Applicant Login\n      </h1>\n      <div className=\"form\">\n        <Form>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n                onChange={(input) => onEmailChange(input)}\n                type=\"email\"\n                placeholder=\"Enter email\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n                onChange={(input) => onPasswordChange(input)}\n                type=\"password\"\n                placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Button className=\"submitButton\" onClick={() => setIsSubmitted(true)} variant=\"primary\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n      {\n        isSubmitted &&\n        (\n          <div>\n            <p>Email: {email}</p>\n            <p>Password: {password}</p>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default ApplicantLogin;\n","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/employer/signup/EmployerSignup.js",["73","74","75"],"import Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport { useFormFields } from \"../../../libs/hooks/useFormFields.js\";\n\nimport axios from 'axios';\n\nimport React, { useState } from 'react';\n\nimport './css/EmployerSignup.css';\n\nfunction EmployerSignup() {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    confirmEmail: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [fieldValidationMessage, setFieldValidationMessage] = useState(\"\");\n  const [areFieldsValid, setAreFieldsValid] = useState(false);\n\n  const onSubmit = () => {\n    // validate fields\n    if (fields.email.length === 0) {\n      setFieldValidationMessage(\"Please enter a email\");\n    } else if (fields.confirmEmail.length === 0) {\n      setFieldValidationMessage(\"Please confirm your email\");\n    } else if (fields.email !== fields.confirmEmail) {\n      setFieldValidationMessage(\"Please ensure your emails match\");\n    } else if (fields.password.length < 6) {\n      setFieldValidationMessage(\"Please enter a password of 6 characters or longer\");\n    } else if (fields.password !== fields.confirmPassword) {\n      setFieldValidationMessage(\"Please ensure your passwords match\");\n    } else {\n        // TODO: Hook up with backend and actually sign up this user\n      setFieldValidationMessage(\"\");\n      setAreFieldsValid(true);\n    }\n  }\n\n  return (\n    <div className=\"root\">\n      <h1>\n        Employer Signup\n      </h1>\n      <Form className=\"form\">\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"confirmEmail\">\n          <Form.Label>Confirm email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Confirm email\"\n            value={fields.confirmEmail}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"confrimPassword\">\n          <Form.Label>Confirm password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={fields.confrimPassword}\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Button className=\"button\" onClick={onSubmit} variant=\"primary\">\n          Sign Up\n        </Button>\n        {\n            fieldValidationMessage.length !== 0\n              &&\n              <div class=\"alert alert-danger\" role=\"alert\">\n                {fieldValidationMessage}\n              </div>\n        }\n        {\n            areFieldsValid\n              &&\n              <div class=\"alert alert-success\" role=\"alert\">\n                Success!\n              </div>\n        }\n      </Form>\n    </div>\n  );\n}\n\nexport default EmployerSignup;\n","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/employer/login/EmployerLogin.js",["76","77"],"import Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport React, { useState } from 'react';\n\nimport './css/EmployerLogin.css';\n\nfunction EmployerLogin() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const onEmailChange = (input) => {\n      isSubmitted && setIsSubmitted(false);\n      setEmail(input.target.value);\n  };\n\n  const onPasswordChange = (input) => {\n      isSubmitted && setIsSubmitted(false);\n      setPassword(input.target.value);\n  };\n\n  return (\n    <div className=\"root\">\n      <h1>\n        Employer Login\n      </h1>\n      <div className=\"form\">\n        <Form>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n                onChange={(input) => onEmailChange(input)}\n                type=\"email\"\n                placeholder=\"Enter email\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n                onChange={(input) => onPasswordChange(input)}\n                type=\"password\"\n                placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Button className=\"submitButton\" onClick={() => setIsSubmitted(true)} variant=\"primary\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n      {\n        isSubmitted &&\n        (\n          <div>\n            <p>Email: {email}</p>\n            <p>Password: {password}</p>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default EmployerLogin;\n","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/employer/Employer.js",["78"],"import EmployerLogin from \"./login/EmployerLogin.js\";\nimport EmployerSignup from \"./signup/EmployerSignup.js\";\n\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction Employer() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/employer/\" exact>\n          <h2>Hello Employer</h2>\n        </Route>\n        <Route path=\"/employer/signup\" component={EmployerSignup} />\n        <Route path=\"/employer/login\" component={EmployerLogin} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Employer;\n","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/applicant/Applicant.js",["79"],"import ApplicantLogin from \"./login/ApplicantLogin.js\";\nimport ApplicantSignup from \"./signup/ApplicantSignup.js\";\n\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction Applicant() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/applicant\" exact>\n          <h2>Hello Applicant</h2>\n        </Route>\n        <Route path=\"/applicant/signup\" component={ApplicantSignup} />\n        <Route path=\"/applicant/login\" component={ApplicantLogin} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Applicant;\n","/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/libs/hooks/useFormFields.js",[],["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":19},{"ruleId":"86","severity":1,"message":"90","line":15,"column":17,"nodeType":"88","messageId":"89","endLine":15,"endColumn":25},{"ruleId":"86","severity":1,"message":"91","line":18,"column":3,"nodeType":"88","messageId":"89","endLine":18,"endColumn":9},{"ruleId":"86","severity":1,"message":"92","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"93","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"86","severity":1,"message":"94","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"86","severity":1,"message":"95","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":3,"column":17,"nodeType":"88","messageId":"89","endLine":3,"endColumn":25},{"ruleId":"86","severity":1,"message":"93","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"86","severity":1,"message":"94","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"86","severity":1,"message":"93","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"86","severity":1,"message":"94","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"86","severity":1,"message":"95","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":13},{"ruleId":"86","severity":1,"message":"93","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"86","severity":1,"message":"94","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"86","severity":1,"message":"90","line":4,"column":17,"nodeType":"88","messageId":"89","endLine":4,"endColumn":25},{"ruleId":"86","severity":1,"message":"90","line":4,"column":17,"nodeType":"88","messageId":"89","endLine":4,"endColumn":25},{"ruleId":"82","replacedBy":"96"},{"ruleId":"84","replacedBy":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Switch' is defined but never used.","'React' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'axios' is defined but never used.",["98"],["99"],"no-global-assign","no-unsafe-negation"]