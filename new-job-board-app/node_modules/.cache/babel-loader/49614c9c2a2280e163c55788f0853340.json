{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/applicant/signup/ApplicantSignup.js\",\n    _s = $RefreshSig$();\n\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport React, { useState } from 'react';\n\nfunction ApplicantSignup() {\n  _s();\n\n  const [fields, handleFieldChange] = useFormFields({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    confirmEmail: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n  const [isValidPassword, setIsValidPassword] = useState(false);\n  const [passwordsMatch, setPasswordsMatch] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Applicant Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: input => onEmailChange(input),\n            type: \"email\",\n            placeholder: \"Enter first name\",\n            value: feilds.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: input => onEmailChange(input),\n            type: \"email\",\n            placeholder: \"Enter last name\",\n            value: fields.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: input => onEmailChange(input),\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: feilds.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: input => onEmailChange(input),\n            type: \"email\",\n            placeholder: \"Confirm email\",\n            value: feilds.confirmEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: input => onPasswordChange(input),\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: feilds.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: input => onPasswordChange(input),\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: feilds.confrimPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"submitButton\",\n          onClick: () => setIsSubmitted(true),\n          variant: \"primary\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password: \", password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApplicantSignup, \"K5V86EKt+vdYm+U9BkOrbF7ec/U=\", true);\n\n_c = ApplicantSignup;\nexport default ApplicantSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicantSignup\");","map":{"version":3,"sources":["/Users/harirajan/Documents/personal/new-job-board-app/new-job-board-app/src/components/applicant/signup/ApplicantSignup.js"],"names":["Button","InputGroup","Form","FormControl","React","useState","ApplicantSignup","fields","handleFieldChange","useFormFields","firstName","lastName","email","confirmEmail","password","confirmPassword","setEmail","setPassword","confirmedPassword","setConfirmedPassword","isValidPassword","setIsValidPassword","passwordsMatch","setPasswordsMatch","isSubmitted","setIsSubmitted","input","onEmailChange","feilds","onPasswordChange","confrimPassword"],"mappings":"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","sourcesContent":["import Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport React, { useState } from 'react';\n\nfunction ApplicantSignup() {\n  const [fields, handleFieldChange] = useFormFields({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    confirmEmail: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n  const [isValidPassword, setIsValidPassword] = useState(false);\n  const [passwordsMatch, setPasswordsMatch] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  return (\n    <div className=\"root\">\n      <h1>\n        Applicant Signup\n      </h1>\n      <div className=\"form\">\n        <Form>\n          <Form.Group>\n            <Form.Label>First name</Form.Label>\n            <Form.Control\n                onChange={(input) => onEmailChange(input)}\n                type=\"email\"\n                placeholder=\"Enter first name\"\n                value={feilds.firstName}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Last name</Form.Label>\n            <Form.Control\n                onChange={(input) => onEmailChange(input)}\n                type=\"email\"\n                placeholder=\"Enter last name\"\n                value={fields.lastName}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n                onChange={(input) => onEmailChange(input)}\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={feilds.email}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Confirm email address</Form.Label>\n            <Form.Control\n                onChange={(input) => onEmailChange(input)}\n                type=\"email\"\n                placeholder=\"Confirm email\"\n                value={feilds.confirmEmail}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n                onChange={(input) => onPasswordChange(input)}\n                type=\"password\"\n                placeholder=\"Enter password\"\n                value={feilds.password}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n                onChange={(input) => onPasswordChange(input)}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={feilds.confrimPassword}\n            />\n          </Form.Group>\n          <Button className=\"submitButton\" onClick={() => setIsSubmitted(true)} variant=\"primary\">\n            Sign Up\n          </Button>\n        </Form>\n      </div>\n      {\n        isSubmitted &&\n        (\n          <div>\n            <p>Email: {email}</p>\n            <p>Password: {password}</p>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default ApplicantSignup;\n"]},"metadata":{},"sourceType":"module"}